name: Update, build and release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - 'master'


jobs:
  update_packages:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Packages install
        run: pacman -Syy --noconfirm && pacman -S --noconfirm git jq nix python python-requests

      - name: Checkout
        uses: actions/checkout@v4

      - name: Fix git access
        run: 
          git config --global --add safe.directory "*"

      - name: Update version file
        run: python utility/update_version.py

      - name: Update package files
        run: python utility/generate_packages.py

      - name: Retrieve version to make commit
        run: sh .github/workflows/retrieve_version.sh

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9.1.4
        id: commit
        with:
          message: "Update packages to ${{ env.release_name }}"
          add: "."
          author_name: "GitHub Actions"
          author_email: "loraner123@gmail.com"

      - name: Publish package changes to AUR
        if: "${{ github.event.commits[0] }}"
        uses: KSXGitHub/github-actions-deploy-aur@v2.7.0
        with:
          pkgname: "yandex-music"
          pkgbuild: "PKGBUILD"
          updpkgsums: false
          allow_empty_commits: true
          commit_username: "cucumber-sp"
          commit_email: "loraner123@gmail.com"
          ssh_private_key: "${{ secrets.AUR_SSH_PRIVATE_KEY }}"
          commit_message: "${{ github.event.commits[0].message }}"
          ssh_keyscan_types: "rsa,dsa,ecdsa,ed25519"
          
    outputs:
      new_version: ${{ steps.commit.outputs.commited }}
      commit_long_sha: ${{ steps.commit.outputs.commit_long_sha }}

  build:
    needs: update_packages
    uses: ./.github/workflows/build.yml
    with:
      ref: ${{ (needs.update_packages.outputs.commit_long_sha || '') }}

  upload-release:
    needs: [build, update_packages]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ (needs.update_packages.outputs.commit_long_sha || '') }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - name: Retrieve version
        run: |
          sudo apt-get update
          sudo apt-get install jq
          sh ./.github/workflows/retrieve_version.sh
      
      - name: Get Release Notes HTML 
        run: echo "release_html=$(jq -r --arg version "$VERSION" '.["desktop-release-notes." + $version]' ./dist/release_notes.json)" >> $GITHUB_ENV

      - run: rm -rf dist/release_notes.json

      - name: Tag Repo
        uses: richardsimko/update-tag@v1
        with:
          tag_name: ${{ env.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload files to a GitHub release
        uses: ncipollo/release-action@v1.13.0
        with:
          allowUpdates: true
          artifacts: dist/*
          makeLatest: true
          name: ${{ env.release_name }}
          replacesArtifacts: true
          tag: ${{ env.tag_name }}
          body: ${{ env.release_html }}

